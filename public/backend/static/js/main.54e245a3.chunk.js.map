{"version":3,"sources":["Components/InputScreen.js","Components/TaskTable.js","Components/TableComponent.js","Components/ProgressBar.js","App.js","index.js"],"names":["InputScreen","_ref","handleFormSubmit","_useState","useState","multipleFiles","singleFile","filePath","modelName","xmlaEndpoint","thresholdValue","isFirstTime","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_e$target","target","name","value","type","checked","fieldValue","_objectSpread","_defineProperty","_jsxs","className","children","_jsx","class","action","method","id","onChange","placeholder","onClick","preventDefault","SimpleButton","props","cell","_cell","row","data","cellValue","style","threshold","backgroundColor","console","log","TaskTable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","divColor","selectedName","ref","columns","title","field","width","formatter","reactFormatter","rowClick","setState","getData","setData","clearData","_createClass","key","this","ReactTabulator","footerElement","React","Component","TableComponent","response","result","_useState3","_useState4","selectedMeasure","setSelectedMeasure","_useState5","_useState6","selectedDimension","setSelectedDimension","_useState7","_useState8","selectedReport","setSelectedReport","_useState9","_useState10","selectedVisual","setSelectedVisual","_useState11","_useState12","selectedPage","setSelectedPage","_useState13","_useState14","filteredData","setFilteredData","measures","_toConsumableArray","Set","map","item","Measure","dimensions","DimensionName","reports","ReportName","visuals","VisualName","pages","PageName","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","undefined","_useState15","_useState16","filterthresholdCheckboxFlag","setFilterthresholdCheckboxFlag","_useState17","_useState18","filterdimensionCheckboxFlag","setFilterdimensionCheckboxFlag","filterTableData","measure","dimension","report","visual","page","filtered","filter","maxWidth","event","index","Button","variant","currentTarget","IconButton","FilterListIcon","Popover","display","flexDirection","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","LoadTime","hasDimension","entry","overflowY","height","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","minWidth","color","Math","round","LinearWithValueLabel","totalprogress","progress","setProgress","totalprogresss","timer","setInterval","prevProgress","clearInterval","App","loading","setLoading","setResponse","setFormdata","Fragment","fetch","body","JSON","stringify","headers","then","json","parse","catch","error","alert","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e245a3.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import './InputScreen.css'\r\n\r\nconst InputScreen = ({ handleFormSubmit }) => {\r\n    // const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        multipleFiles: false,\r\n        singleFile: false,\r\n        filePath: '',\r\n        modelName: '',\r\n        xmlaEndpoint: '',\r\n        thresholdValue: '',\r\n        isFirstTime: false,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const fieldValue = type === 'checkbox' ? checked : value;\r\n        setFormData({ ...formData, [name]: fieldValue });\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formData)\r\n        handleFormSubmit(formData)\r\n        // navigate(\"/data\");\r\n    };\r\n\r\n\r\n     \r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Metric Load Time Tool</h1>\r\n            <form class=\"well form-horizontal mt-5\" action=\"/submit\" method=\"post\" id=\"contact_form\">\r\n                <fieldset>\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Check for Multiple Files:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"multiple_files\" name=\"multipleFiles\" value={formData.multipleFiles} onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Check for Single File:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"single_file\" name=\"singleFile\" value={formData.singleFile}\r\n                                onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">File Paths</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"filePath\" placeholder=\"Enter the file path\" class=\"form-control\" value={formData.filePath} type=\"text\" onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Model Name</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"modelName\" placeholder=\"Enter the Model Name\" class=\"form-control\" type=\"text\" value={formData.modelName} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">XMLA Endpoint</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"xmlaEndpoint\" placeholder=\"Enter the XMLA Endpoint of Workspace\" class=\"form-control\" value={formData.xmlaEndpoint} type=\"text\" onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Threshold Value</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"thresholdValue\" placeholder=\"Enter Threshold Value\" class=\"form-control\" value={formData.thresholdValue} type=\"text\" onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Running for First Time?</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"running_first_time\" name=\"isFirstTime\" value={formData.isFirstTime} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <div class=\"col-md-8 col-md-offset-4\">\r\n                            <button class=\"btn btn-success\" onClick={handleSubmit}>Go!</button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </form></div>\r\n    );\r\n};\r\n\r\nexport default InputScreen;\r\n","import React from \"react\";\r\n// import \"./styles.css\";\r\n// import data from \"../data\";\r\n\r\n// import DateEditor from \"react-tabulator/lib/editors/DateEditor\";\r\n// import MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\r\n// import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\r\n\r\nimport \"react-tabulator/lib/styles.css\"; // default theme\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\r\n\r\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\r\n\r\nfunction SimpleButton(props) {\r\n  const rowData = props.cell._cell.row.data;\r\n  const cellValue = props.cell._cell.value \r\n  const threshold =  props.threshold\r\n  const style = cellValue === threshold ? { backgroundColor: 'red' } : {};\r\n  console.log(cellValue)\r\n  return <p style={style}>{cellValue}</p>;\r\n}\r\n\r\n// const data = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"Oli Bob\",\r\n//     age: \"12\",\r\n//     color: \"red\",\r\n//     dob: \"01/01/1980\",\r\n//     rating: 5,\r\n//     passed: true,\r\n//     pets: [\"cat\", \"dog\"]\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Mary May\",\r\n//     age: \"1\",\r\n//     color: \"green\",\r\n//     dob: \"12/05/1989\",\r\n//     rating: 4,\r\n//     passed: true,\r\n//     pets: [\"cat\"]\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     name: \"Margret Marmajuke\",\r\n//     age: \"16\",\r\n//     color: \"yellow\",\r\n//     dob: \"07/01/1999\",\r\n//     rating: 4,\r\n//     passed: false\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"Van Ng\",\r\n//     age: \"37\",\r\n//     color: \"green\",\r\n//     dob: \"06/10/1982\",\r\n//     rating: 4,\r\n//     passed: true,\r\n//     pets: [\"dog\", \"fish\"]\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"Duc Ng\",\r\n//     age: \"37\",\r\n//     color: \"yellow\",\r\n//     dob: \"10/10/1982\",\r\n//     rating: 4,\r\n//     passed: true,\r\n//     pets: [\"dog\"]\r\n//   }\r\n// ];\r\n\r\n// Editable Example:\r\nconst colorOptions = {\r\n  \"\": \"&nbsp;\",\r\n  red: \"red\",\r\n  green: \"green\",\r\n  yellow: \"yellow\"\r\n};\r\nconst petOptions = [\r\n  { id: \"cat\", name: \"cat\" },\r\n  { id: \"dog\", name: \"dog\" },\r\n  { id: \"fish\", name: \"fish\" }\r\n];\r\n\r\nclass TaskTable extends React.Component {\r\n  state = {\r\n    data: this.props.data,\r\n    threshold : this.props.formData.thresholdValue,\r\n    divColor: 'initial-color',\r\n    selectedName: \"\"\r\n  };\r\n  ref = null;\r\n\r\n\r\n  // \"Measure\": \"MetaCombineStatus\",\r\n  // \"DimensionName\": \"Stream Name Dimension Ingestion\",\r\n  // \"ColumnName\": null,\r\n  // \"LoadTime\": \"0.01\",\r\n  // \"isMeasureUsedInVisual\": \"0\",\r\n  // \"ReportName\": \"Refresh Tracker\",\r\n  // \"PageName\": \"-\",\r\n  // \"VisualName\": \"-\",\r\n  // \"Query\": null,\r\n  // \"hasDimension\": \"1\"\r\n  // componentDidMount() {\r\n  //   // Find the div with the class 'tabulator-cell' and get its inner text\r\n  //   const tabulatorCellDiv = document.querySelector('.tabulator-cell');\r\n  //   const innerText = tabulatorCellDiv.innerText;\r\n\r\n  //   // Define your condition for changing the color\r\n  //   if (innerText === this.state.threshold) {\r\n  //     this.setState({ divColor: 'red' });\r\n  //   } \r\n  //   // Add more conditions as needed\r\n  // }\r\n\r\n\r\n\r\n  columns = [\r\n    { title: \"Measure\", field: \"Measure\", width: 250 },\r\n    { title: \"Dimension Name\", field: \"DimensionName\", width: 200 }, //, hozAlign: \"left\", formatter: \"progress\" },\r\n    { title: \"Column Name\", field: \"ColumnName\", width: 150 },\r\n    { title: \"LoadTime\", field: \"LoadTime\" ,  width: 150, formatter: reactFormatter(\r\n      <SimpleButton threshold={this.state.threshold}/>\r\n    )},\r\n    { title: \"Report Name\", field: \"ReportName\", width: 150 },\r\n    {\r\n      title: \"Page Name\",\r\n      field: \"PageName\",\r\n      width: 175 \r\n     \r\n    },\r\n    {\r\n      title: \"Visual Name\",\r\n      field: \"VisualName\",\r\n      width: 150 \r\n    }\r\n  ];\r\n\r\n  rowClick = (e, row) => {\r\n    // console.log(\"ref table: \", this.ref.current); // this is the Tabulator table instance\r\n    // console.log(\"rowClick id: ${row.getData().id}\", row, e);\r\n    this.setState({ selectedName: row.getData().name });\r\n  };\r\n\r\n  setData = () => {\r\n    this.setState(this.props.data);\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] });\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      height: 200,\r\n      movableRows: true,\r\n      movableColumns: true\r\n    };\r\n    console.log(this.state.threshold)\r\n    return (\r\n      <div className=\"mt-5 mx-2 border\">\r\n\r\n        <ReactTabulator\r\n          columns={this.columns}\r\n          data={this.props.data}\r\n          footerElement={<span>Footer</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskTable;\r\n","import React, { useEffect, useState } from 'react'\r\nimport EnhancedTable from './demo'\r\nimport MeasureDropdown from './MeasureDropdown'\r\nimport VisualDropdown from './VisualDropdown'\r\nimport DimensionDropdown from './DimensionDropdown'\r\nimport { Button, IconButton, Popover, Typography } from '@mui/material'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport TaskTable from './TaskTable'\r\n\r\nconst TableComponent = ({ response, formData }) => {\r\n  // const [measureList, setMeasureList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.Measure))]\r\n  // );\r\n  // const [dimensionList, setDimensionList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.DimensionName))]\r\n  // );\r\n  // const [visualList, setVisualList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.VisualName))]\r\n  //   );\r\n\r\n  const [data, setData] = useState(response.result)\r\n\r\n  // const [filteredData, setFilteredData] = useState([]);\r\n  // const [MeasureName, setMeasureName] = useState(\"\");\r\n\r\n  // const handleMeasureSelect = (e) => {\r\n  //   setMeasureName(e);\r\n  //   setFilteredData(filteredData.filter((row) => row.Measure === e));\r\n  // };\r\n\r\n  // const [visualName, setVisualName] = useState(\"\");\r\n  // const handleVisualSelect = (e) => {\r\n  //   const filtered = filteredData.filter((item) => visualName.includes(item.data));\r\n  //   setFilteredData(filtered);\r\n  // };\r\n\r\n  // const [DimensionName, setDimensionName] = useState(\"\");\r\n  // const handleDimensionSelect = (e) => {\r\n  //   setDimensionName(e);\r\n  //   setFilteredData(filteredData.filter((row) => row.DimensionName === e));\r\n  // };\r\n\r\n  const [selectedMeasure, setSelectedMeasure] = useState('')\r\n  const [selectedDimension, setSelectedDimension] = useState('')\r\n  const [selectedReport, setSelectedReport] = useState('')\r\n  const [selectedVisual, setSelectedVisual] = useState('')\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n  const [filteredData, setFilteredData] = useState(data)\r\n\r\n  const measures = [...new Set(response.result.map(item => item.Measure))]\r\n  const dimensions = [\r\n    ...new Set(response.result.map(item => item.DimensionName))\r\n  ]\r\n  const reports = [...new Set(response.result.map(item => item.ReportName))]\r\n  const visuals = [...new Set(response.result.map(item => item.VisualName))]\r\n  const pages = [...new Set(response.result.map(item => item.PageName))]\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n\r\n  const [\r\n    filterthresholdCheckboxFlag,\r\n    setFilterthresholdCheckboxFlag\r\n  ] = useState(false)\r\n\r\n  const [filterdimensionCheckboxFlag, setFilterdimensionCheckboxFlag] =\r\n    useState(false)\r\n\r\n  function filterTableData(\r\n    measure,\r\n    dimension,\r\n    report,\r\n    visual,\r\n    page,\r\n    filterthresholdCheckboxFlag,\r\n    filterdimensionCheckboxFlag\r\n  ) {\r\n    const filtered = data.filter(item => {\r\n      return (\r\n        (measure === '' || item.Measure === measure) &&\r\n        (dimension === '' || item.DimensionName === dimension) &&\r\n        (report === '' || item.ReportName === report) &&\r\n        (visual === '' || item.VisualName === visual) &&\r\n        (page === '' || item.PageName === page) \r\n        \r\n      )\r\n    })\r\n    setFilteredData(filtered)\r\n  }\r\n  const handlethresholdCheckboxChange = event => {\r\n    setFilterthresholdCheckboxFlag(event.target.checked)\r\n    // filterTableData(\r\n    //   selectedMeasure,\r\n    //   selectedDimension,\r\n    //   selectedReport,\r\n    //   selectedVisual,\r\n    //   selectedPage,\r\n    //   filterthresholdCheckboxFlag,\r\n    //   filterdimensionCheckboxFlag\r\n    // )\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterthresholdCheckboxFlag ? item.LoadTime === (formData.thresholdValue) : true\r\n      })\r\n    )\r\n  }\r\n\r\n  const handledimensionCheckboxChange = event => {\r\n    setFilterdimensionCheckboxFlag(event.target.checked)\r\n    // filterTableData(\r\n    //   selectedMeasure,\r\n    //   selectedDimension,\r\n    //   selectedReport,\r\n    //   selectedVisual,\r\n    //   selectedPage,\r\n    //   filterthresholdCheckboxFlag,\r\n    //   filterdimensionCheckboxFlag\r\n    // )\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterdimensionCheckboxFlag ? item.hasDimension === '1' : true\r\n      })\r\n    )\r\n  }\r\n\r\n  function handleMeasureChange(event) {\r\n    setSelectedMeasure(event.target.value)\r\n    filterTableData(\r\n      event.target.value,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleDimensionChange(event) {\r\n    setSelectedDimension(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      event.target.value,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleReportChange(event) {\r\n    setSelectedReport(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      event.target.value,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleVisualChange(event) {\r\n    setSelectedVisual(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      event.target.value,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handlePageChange(event) {\r\n    setSelectedPage(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      event.target.value,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\" style={{ maxWidth: 'fit-content' }}>\r\n      <div className=\"dropdowns p-10\">\r\n        <select\r\n          value={selectedMeasure}\r\n          onChange={handleMeasureChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Measures</option>\r\n          {measures.map((measure, index) => (\r\n            <option key={index} value={measure}>\r\n              {measure}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedDimension}\r\n          onChange={handleDimensionChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Dimensions</option>\r\n          {dimensions.map((dimension, index) => (\r\n            <option key={index} value={dimension}>\r\n              {dimension}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedReport}\r\n          onChange={handleReportChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Reports</option>\r\n          {reports.map((report, index) => (\r\n            <option key={index} value={report}>\r\n              {report}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedPage}\r\n          onChange={handlePageChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Pages</option>\r\n          {pages.map((page, index) => (\r\n            <option key={index} value={page}>\r\n              {page}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedVisual}\r\n          onChange={handleVisualChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Visuals</option>\r\n          {visuals.map((visual, index) => (\r\n            <option key={index} value={visual}>\r\n              {visual}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          aria-describedby={id}\r\n          variant=\"contained\"\r\n          onClick={handleClick}\r\n          className=\"mx-2\"\r\n        >\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          style={{ display: 'flex', flexDirection: 'row' }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left'\r\n          }}\r\n        >\r\n          <Typography sx={{ p: 2 }}>\r\n            {' '}\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterthresholdCheckboxFlag}\r\n                onChange={handlethresholdCheckboxChange}\r\n              />\r\n              Above Threshold\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterdimensionCheckboxFlag}\r\n                onChange={handledimensionCheckboxChange}\r\n              />\r\n              Measure With Dimensions\r\n            </label>\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n      <div className=\"cards\">\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card total_measures  rounded-0 \">\r\n            <div className=\"card-body\">\r\n              <h4 class=\"card-text\">\r\n                {' '}\r\n                <b>Total Measure Combination</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">{response.result.length}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_below_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n                {' '}\r\n                <b>Combinations below threshold</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e < formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_above_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n                {' '}\r\n                <b>Combinations above threshold</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e === formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table mt-3\" style={{ overflowY: 'auto', height: '67vh' }}>\r\n        {/* <EnhancedTable\r\n          rows={filteredData}\r\n          thresholdValue={formData.thresholdValue}\r\n          connection_string={response.connection_string}\r\n          filterthresholdCheckboxFlag={filterthresholdCheckboxFlag}\r\n          filterdimensionCheckboxFlag={filterdimensionCheckboxFlag}\r\n        /> */}\r\n        <TaskTable data={filteredData} formData={formData}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableComponent\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel({totalprogress}) {\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  const totalprogresss = totalprogress\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 0.001));\r\n    }, totalprogresss*100000000000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport InputScreen from \"./Components/InputScreen\";\r\nimport TableComponent from \"./Components/TableComponent\";\r\nimport \"./App.css\";\r\nimport LoadingSpinner from \"./Components/Spinner\";\r\nimport LinearWithValueLabel from \"./Components/ProgressBar\";\r\nimport CircularWithValueLabel from \"./Components/ProgressBar\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [progress, setProgress] = useState(0)\r\n  const [formData, setFormdata] = useState({});\r\n  const handleFormSubmit = (formData) => {\r\n\r\n\r\n    console.log(formData)\r\n    setLoading(true);\r\n    setFormdata(formData);\r\n    fetch(\"http://127.0.0.1:3002/progress\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProgress(JSON.parse(data).result)\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        alert(error);\r\n      });\r\n\r\n\r\n    setTimeout(() => {\r\n      fetch(\"http://127.0.0.1:3002/data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(response)\r\n          setResponse(JSON.parse(data));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          alert(error);\r\n        });\r\n    }, 100000);\r\n    // setLoading(true);\r\n    // setFormdata(formData);\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      {/* <Titlebar /> */}\r\n      <div>\r\n        {loading ? (\r\n          <div>\r\n            <LinearWithValueLabel totalprogress={progress} />\r\n          </div>\r\n        ) : response ? (\r\n          <TableComponent response={response} formData={formData} />\r\n        ) : (\r\n          <InputScreen handleFormSubmit={handleFormSubmit} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}