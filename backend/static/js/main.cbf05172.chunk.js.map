{"version":3,"sources":["Components/InputScreen.js","Components/TaskTable.js","Components/TableComponent.js","Components/ProgressBar.js","App.js","index.js"],"names":["InputScreen","_ref","handleFormSubmit","_useState","useState","_useState2","_slicedToArray","selectedFiles","setselectedFiles","_useState3","multipleFiles","singleFile","filePath","modelName","xmlaEndpoint","thresholdValue","isFirstTime","_useState4","formData","setFormData","handleChange","e","_e$target","target","name","value","type","checked","fieldValue","_objectSpread","_defineProperty","console","log","_useState5","filepath","_useState6","Filepath","setFilepath","_useState7","_useState8","options","setOptions","useEffect","fetchReports","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","t0","error","stop","apply","arguments","map","pathArray","fileNameWithoutExtension","split","pop","replace","label","_jsxs","className","children","_jsx","class","action","method","id","onChange","Select","isMulti","join","placeholder","onClick","preventDefault","SimpleButton","props","cell","_cell","row","data","cellValue","threshold","TaskTable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","Array","_key","call","concat","state","divColor","selectedName","ref","getColumns","baseColumns","title","field","width","push","formatter","reactFormatter","rowClick","setState","getData","setData","clearData","_createClass","key","_this2","ReactTabulator","columns","this","footerElement","rowFormatter","LoadTime","getElement","style","backgroundColor","React","Component","TableComponent","selectedMeasure","setSelectedMeasure","selectedDimension","setSelectedDimension","selectedReport","setSelectedReport","_useState9","_useState10","selectedVisual","setSelectedVisual","_useState11","_useState12","selectedPage","setSelectedPage","_useState13","_useState14","filteredData","setFilteredData","measures","_toConsumableArray","Set","item","Measure","dimensions","DimensionName","reports","ReportName","visuals","VisualName","pages","PageName","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","undefined","_useState15","_useState16","filterthresholdCheckboxFlag","setFilterthresholdCheckboxFlag","_useState17","_useState18","filterdimensionCheckboxFlag","setFilterdimensionCheckboxFlag","_useState19","_useState20","filtervisualCheckboxFlag","setFiltervisualCheckboxFlag","filterTableData","measure","dimension","report","visual","page","filtered","filter","maxWidth","event","index","Button","variant","currentTarget","IconButton","FilterListIcon","Popover","display","flexDirection","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","hasDimension","entry","overflowY","height","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","minWidth","color","Math","round","LinearWithValueLabel","totalprogress","progress","setProgress","totalprogresss","timer","setInterval","prevProgress","clearInterval","App","loading","setLoading","setResponse","setFormdata","Fragment","body","JSON","stringify","headers","then","parse","catch","alert","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbf05172.chunk.js","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\n\r\n// import './InputScreen.css'\r\n\r\nconst InputScreen = ({ handleFormSubmit }) => {\r\n    // const navigate = useNavigate();\r\n    const [selectedFiles, setselectedFiles] = useState(\"\")\r\n\r\n    const [formData, setFormData] = useState({\r\n        multipleFiles: false,\r\n        singleFile: false,\r\n        filePath: '',\r\n        modelName: '',\r\n        xmlaEndpoint: '',\r\n        thresholdValue: '',\r\n        isFirstTime: false,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const fieldValue = type === 'checkbox' ? checked : value;\r\n        setFormData({ ...formData, [name]: fieldValue });\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formData)\r\n        handleFormSubmit(formData)\r\n        // navigate(\"/data\");\r\n    };\r\n\r\n\r\n\r\n    const handleChangeFile = (e) => {\r\n        setselectedFiles(e.map(e => e.value).join(','))\r\n        setFormData({ ...formData, ['filePath']: e.map(e => e.value).join(',') });\r\n    }\r\n\r\n    console.log(selectedFiles)\r\n \r\n    const [Filepath, setFilepath] = useState({ filepath: [] });\r\n    const [options, setOptions] = useState([]);\r\n \r\n    useEffect(() => {\r\n      const fetchReports = async () => {\r\n        try {\r\n          const response = await fetch(\"http://127.0.0.1:3002/getreport\");\r\n          const result = await response.json();\r\n          setFilepath(result);\r\n        } catch (error) {\r\n          console.error('Error fetching reports:', error);\r\n        }\r\n      };\r\n \r\n      fetchReports();\r\n    }, []); // Empty dependency array ensures that this effect runs once when the component mounts\r\n \r\n    useEffect(() => {\r\n      const options = Filepath.filepath.map(pathArray => {\r\n        const filePath = pathArray[0];\r\n        const fileNameWithoutExtension = filePath.split('\\\\').pop().replace(/\\..+$/, '');\r\n \r\n        return {\r\n          value: filePath,\r\n          label: fileNameWithoutExtension\r\n        };\r\n      });\r\n \r\n      setOptions(options);\r\n    }, [Filepath]); // Run this effect whenever Filepath changes\r\n\r\n\r\n    // console.log(Filepath)\r\n\r\n\r\n     \r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Metric Load Time Tool</h1>\r\n            <form class=\"well form-horizontal mt-5\" action=\"/submit\" method=\"post\" id=\"contact_form\">\r\n                <fieldset>\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Check for Multiple Files:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"multiple_files\" name=\"multipleFiles\" value={formData.multipleFiles} onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Check for Single File:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"single_file\" name=\"singleFile\" value={formData.singleFile}\r\n                                onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">File Paths</label>\r\n                        <div class=\"col-md-8\">\r\n                            {/* <input name=\"filePath\" placeholder=\"Enter the file path\" class=\"form-control\" value={formData.filePath} type=\"text\" onChange={handleChange} /> */}\r\n                            <Select isMulti options={options} onChange={handleChangeFile}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Model Name</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"modelName\" placeholder=\"Enter the Model Name\" class=\"form-control\" type=\"text\" value={formData.modelName} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">XMLA Endpoint</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"xmlaEndpoint\" placeholder=\"Enter the XMLA Endpoint of Workspace\" class=\"form-control\" value={formData.xmlaEndpoint} type=\"text\" onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Threshold Value</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input name=\"thresholdValue\" placeholder=\"Enter Threshold Value\" class=\"form-control\" value={formData.thresholdValue} type=\"text\" onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <label class=\"col-md-4 control-label\">Running for First Time?</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"running_first_time\" name=\"isFirstTime\" value={formData.isFirstTime} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex\">\r\n                        <div class=\"col-md-8 col-md-offset-4\">\r\n                            <button class=\"btn btn-success\" onClick={handleSubmit}>Go!</button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </form></div>\r\n    );\r\n};\r\n\r\nexport default InputScreen;\r\n","import React from 'react'\r\nimport 'react-tabulator/lib/styles.css' // default theme\r\nimport 'react-tabulator/css/bootstrap/tabulator_bootstrap.min.css' // use Theme(s)\r\n\r\nimport { ReactTabulator, reactFormatter } from 'react-tabulator'\r\n\r\nfunction SimpleButton(props) {\r\n  const rowData = props.cell._cell.row.data\r\n  const cellValue = props.cell._cell.value\r\n  const threshold = props.threshold\r\n  const style = cellValue === threshold ? { backgroundColor: 'black' } : {}\r\n  console.log(typeof(cellValue))\r\n  if(cellValue > 0){\r\n\r\n    return <p  className = \"text-danger\">▲</p>\r\n  }\r\n  else{\r\n    return <p className='text-success'>▼</p>\r\n\r\n  }\r\n}\r\n\r\nclass TaskTable extends React.Component {\r\n  state = {\r\n    data: this.props.data,\r\n    threshold: this.props.formData.thresholdValue,\r\n    isFirstTime: this.props.formData.isFirstTime,\r\n    divColor: 'initial-color',\r\n    selectedName: ''\r\n  }\r\n  ref = null\r\n\r\n  // Define columns conditionally based on isFirstTime\r\n  getColumns = () => {\r\n    const baseColumns = [\r\n      { title: 'Measure', field: 'Measure', width: 200 },\r\n      { title: 'Dimension Name', field: 'DimensionName', width: 200 },\r\n      { title: 'Column Name', field: 'ColumnName', width: 150 },\r\n      { title: 'LoadTime', field: 'LoadTime', width: 150 }\r\n    ]\r\n\r\n    if (!this.state.isFirstTime) {\r\n      // Add \"Previous Load Time\" and \"Change in Load Time\" columns\r\n      baseColumns.push(\r\n        {\r\n          title: 'Previous Load Time',\r\n          field: 'PreviousLoadTime',\r\n          width: 200\r\n        },\r\n        {\r\n          title: 'Change in Load Time',\r\n          field: 'ChangeinLoadTime',\r\n          width: 200,\r\n          formatter: reactFormatter(<SimpleButton />)\r\n        }\r\n      )\r\n    }\r\n\r\n    // Add the remaining columns\r\n    baseColumns.push(\r\n      { title: 'Report Name', field: 'ReportName', width: 150 },\r\n      { title: 'Page Name', field: 'PageName', width: 175 },\r\n      { title: 'Visual Name', field: 'VisualName', width: 125 },\r\n      { title: 'Visual Title', field: 'VisualTitle', width: 150 }\r\n    )\r\n\r\n    return baseColumns\r\n  }\r\n\r\n  rowClick = (e, row) => {\r\n    this.setState({ selectedName: row.getData().name })\r\n  }\r\n\r\n  setData = () => {\r\n    this.setState(this.props.data)\r\n  }\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] })\r\n  }\r\n\r\n  render() {\r\n    const rowFormatter = row => {\r\n      const data = row.getData()\r\n\r\n      if (data.LoadTime === this.state.threshold) {\r\n        row.getElement().style.backgroundColor = 'red'\r\n      }\r\n    }\r\n    const options = {\r\n      height: 200,\r\n      movableRows: true,\r\n      movableColumns: true\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-5 mx-2 border\">\r\n        <ReactTabulator\r\n          columns={this.getColumns()} // Use the dynamically generated columns\r\n          data={this.props.data}\r\n          footerElement={<span>Footer</span>}\r\n          rowFormatter={rowFormatter}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport EnhancedTable from './demo'\r\nimport MeasureDropdown from './MeasureDropdown'\r\nimport VisualDropdown from './VisualDropdown'\r\nimport DimensionDropdown from './DimensionDropdown'\r\nimport { Button, IconButton, Popover, Typography } from '@mui/material'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport TaskTable from './TaskTable'\r\n\r\nconst TableComponent = ({ response, formData }) => {\r\n  // const [measureList, setMeasureList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.Measure))]\r\n  // );\r\n  // const [dimensionList, setDimensionList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.DimensionName))]\r\n  // );\r\n  // const [visualList, setVisualList] = useState(\r\n  //   [...new Set(response.result.map((entry) => entry.VisualName))]\r\n  //   );\r\n\r\n  const [data, setData] = useState(response.result)\r\n\r\n  // const [filteredData, setFilteredData] = useState([]);\r\n  // const [MeasureName, setMeasureName] = useState(\"\");\r\n\r\n  // const handleMeasureSelect = (e) => {\r\n  //   setMeasureName(e);\r\n  //   setFilteredData(filteredData.filter((row) => row.Measure === e));\r\n  // };\r\n\r\n  // const [visualName, setVisualName] = useState(\"\");\r\n  // const handleVisualSelect = (e) => {\r\n  //   const filtered = filteredData.filter((item) => visualName.includes(item.data));\r\n  //   setFilteredData(filtered);\r\n  // };\r\n\r\n  // const [DimensionName, setDimensionName] = useState(\"\");\r\n  // const handleDimensionSelect = (e) => {\r\n  //   setDimensionName(e);\r\n  //   setFilteredData(filteredData.filter((row) => row.DimensionName === e));\r\n  // };\r\n\r\n  const [selectedMeasure, setSelectedMeasure] = useState('')\r\n  const [selectedDimension, setSelectedDimension] = useState('')\r\n  const [selectedReport, setSelectedReport] = useState('')\r\n  const [selectedVisual, setSelectedVisual] = useState('')\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n  const [filteredData, setFilteredData] = useState(data)\r\n\r\n  const measures = [...new Set(response.result.map(item => item.Measure))]\r\n  const dimensions = [\r\n    ...new Set(response.result.map(item => item.DimensionName))\r\n  ]\r\n  const reports = [...new Set(response.result.map(item => item.ReportName))]\r\n  const visuals = [...new Set(response.result.map(item => item.VisualName))]\r\n  const pages = [...new Set(response.result.map(item => item.PageName))]\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n\r\n  const [\r\n    filterthresholdCheckboxFlag,\r\n    setFilterthresholdCheckboxFlag\r\n  ] = useState(false)\r\n\r\n  const [filterdimensionCheckboxFlag, setFilterdimensionCheckboxFlag] =\r\n    useState(false)\r\n\r\n  const [filtervisualCheckboxFlag, setFiltervisualCheckboxFlag] =\r\n    useState(false)\r\n\r\n  function filterTableData(\r\n    measure,\r\n    dimension,\r\n    report,\r\n    visual,\r\n    page,\r\n    filterthresholdCheckboxFlag,\r\n    filterdimensionCheckboxFlag\r\n  ) {\r\n    const filtered = data.filter(item => {\r\n      return (\r\n        (measure === '' || item.Measure === measure) &&\r\n        (dimension === '' || item.DimensionName === dimension) &&\r\n        (report === '' || item.ReportName === report) &&\r\n        (visual === '' || item.VisualName === visual) &&\r\n        (page === '' || item.PageName === page) \r\n        \r\n      )\r\n    })\r\n    setFilteredData(filtered)\r\n  }\r\n  const handlethresholdCheckboxChange = event => {\r\n    setFilterthresholdCheckboxFlag(event.target.checked)\r\n    // filterTableData(\r\n    //   selectedMeasure,\r\n    //   selectedDimension,\r\n    //   selectedReport,\r\n    //   selectedVisual,\r\n    //   selectedPage,\r\n    //   filterthresholdCheckboxFlag,\r\n    //   filterdimensionCheckboxFlag\r\n    // )\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterthresholdCheckboxFlag ? item.LoadTime === (formData.thresholdValue) : true\r\n      })\r\n    )\r\n  }\r\n\r\n  const handledimensionCheckboxChange = event => {\r\n    setFilterdimensionCheckboxFlag(event.target.checked)\r\n    // filterTableData(\r\n    //   selectedMeasure,\r\n    //   selectedDimension,\r\n    //   selectedReport,\r\n    //   selectedVisual,\r\n    //   selectedPage,\r\n    //   filterthresholdCheckboxFlag,\r\n    //   filterdimensionCheckboxFlag\r\n    // )\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterdimensionCheckboxFlag ? item.hasDimension === '1' : true\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  \r\n  const handlevisualCheckboxChange = event => {\r\n    setFiltervisualCheckboxFlag(event.target.checked)\r\n    // filterTableData(\r\n    //   selectedMeasure,\r\n    //   selectedDimension,\r\n    //   selectedReport,\r\n    //   selectedVisual,\r\n    //   selectedPage,\r\n    //   filterthresholdCheckboxFlag,\r\n    //   filterdimensionCheckboxFlag\r\n    // )\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filtervisualCheckboxFlag ? item.VisualName !== '-' : true\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n  function handleMeasureChange(event) {\r\n    setSelectedMeasure(event.target.value)\r\n    filterTableData(\r\n      event.target.value,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleDimensionChange(event) {\r\n    setSelectedDimension(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      event.target.value,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleReportChange(event) {\r\n    setSelectedReport(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      event.target.value,\r\n      selectedVisual,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handleVisualChange(event) {\r\n    setSelectedVisual(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      event.target.value,\r\n      selectedPage,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  function handlePageChange(event) {\r\n    setSelectedPage(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      event.target.value,\r\n      filterthresholdCheckboxFlag,\r\n      filterdimensionCheckboxFlag\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\" style={{ maxWidth: 'fit-content' }}>\r\n      <div className=\"dropdowns p-10\">\r\n        <select\r\n          value={selectedMeasure}\r\n          onChange={handleMeasureChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Measures</option>\r\n          {measures.map((measure, index) => (\r\n            <option key={index} value={measure}>\r\n              {measure}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedDimension}\r\n          onChange={handleDimensionChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Dimensions</option>\r\n          {dimensions.map((dimension, index) => (\r\n            <option key={index} value={dimension}>\r\n              {dimension}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedReport}\r\n          onChange={handleReportChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Reports</option>\r\n          {reports.map((report, index) => (\r\n            <option key={index} value={report}>\r\n              {report}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedPage}\r\n          onChange={handlePageChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Pages</option>\r\n          {pages.map((page, index) => (\r\n            <option key={index} value={page}>\r\n              {page}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedVisual}\r\n          onChange={handleVisualChange}\r\n          className=\"mx-2\"\r\n        >\r\n          <option value=\"\">Visuals</option>\r\n          {visuals.map((visual, index) => (\r\n            <option key={index} value={visual}>\r\n              {visual}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          aria-describedby={id}\r\n          variant=\"contained\"\r\n          onClick={handleClick}\r\n          className=\"mx-2\"\r\n        >\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          style={{ display: 'flex', flexDirection: 'row' }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left'\r\n          }}\r\n        >\r\n          <Typography sx={{ p: 2 }}>\r\n            {' '}\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterthresholdCheckboxFlag}\r\n                onChange={handlethresholdCheckboxChange}\r\n              />\r\n              Above Threshold\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterdimensionCheckboxFlag}\r\n                onChange={handledimensionCheckboxChange}\r\n              />\r\n              Measure With Dimensions\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filtervisualCheckboxFlag}\r\n                onChange={handlevisualCheckboxChange}\r\n              />\r\n              Measure With Visuals\r\n            </label>\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n      <div className=\"cards\">\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card total_measures  rounded-0 \">\r\n            <div className=\"card-body\">\r\n              <h4 class=\"card-text\">\r\n                {' '}\r\n                <b>Total Measure Combination</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">{response.result.length}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_below_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n                {' '}\r\n                <b>Combinations below threshold</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e < formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_above_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n                {' '}\r\n                <b>Combinations above threshold</b>{' '}\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e === formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table mt-3\" style={{ overflowY: 'auto', height: '67vh' }}>\r\n        {/* <EnhancedTable\r\n          rows={filteredData}\r\n          thresholdValue={formData.thresholdValue}\r\n          connection_string={response.connection_string}\r\n          filterthresholdCheckboxFlag={filterthresholdCheckboxFlag}\r\n          filterdimensionCheckboxFlag={filterdimensionCheckboxFlag}\r\n        /> */}\r\n        <TaskTable data={filteredData} formData={formData}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableComponent\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel({totalprogress}) {\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  const totalprogresss = totalprogress\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 95 ? 95 : prevProgress + (0.001)));\r\n    }, totalprogresss*100000000000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport InputScreen from \"./Components/InputScreen\";\r\nimport TableComponent from \"./Components/TableComponent\";\r\nimport \"./App.css\";\r\nimport LoadingSpinner from \"./Components/Spinner\";\r\nimport LinearWithValueLabel from \"./Components/ProgressBar\";\r\nimport CircularWithValueLabel from \"./Components/ProgressBar\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [progress, setProgress] = useState(0)\r\n  const [formData, setFormdata] = useState({});\r\n  const handleFormSubmit = (formData) => {\r\n\r\n\r\n    console.log(formData)\r\n    setLoading(true);\r\n    setFormdata(formData);\r\n    fetch(\"http://127.0.0.1:3002/progress\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProgress(JSON.parse(data).result)\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        alert(error);\r\n      });\r\n\r\n\r\n    setTimeout(() => {\r\n      fetch(\"http://127.0.0.1:3002/data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(response)\r\n          setResponse(JSON.parse(data));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          alert(error);\r\n        });\r\n    }, 100000);\r\n    // setLoading(true);\r\n    // setFormdata(formData);\r\n  };\r\n  console.log(response)\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      {/* <Titlebar /> */}\r\n      <div>\r\n        {loading ? (\r\n          <div>\r\n            <LinearWithValueLabel totalprogress={progress} />\r\n          </div>\r\n        ) : response ? (\r\n          <TableComponent response={response} formData={formData} />\r\n        ) : (\r\n          <InputScreen handleFormSubmit={handleFormSubmit} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}