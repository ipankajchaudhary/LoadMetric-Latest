{"version":3,"sources":["Components/InputScreen.js","Components/TaskTable.js","Components/TableComponent.js","Components/ProgressBar.js","App.js","index.js"],"names":["InputScreen","_ref","handleFormSubmit","_useState","useState","_useState2","_slicedToArray","selectedFiles","setSelectedFiles","_useState3","filePath","modelName","xmlaEndpoint","thresholdValue","isFirstTime","_useState4","formData","setFormData","handleChange","e","_e$target","target","name","value","type","checked","fieldValue","_objectSpread","_defineProperty","console","log","_useState5","filepath","_useState6","Filepath","setFilepath","_useState7","_useState8","options","setOptions","useEffect","fetchReports","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","t0","error","stop","apply","arguments","map","pathArray","fileNameWithoutExtension","split","pop","replace","label","_jsxs","className","children","_jsx","class","action","method","id","Select","isMulti","onChange","join","placeholder","onClick","preventDefault","RenderVariance","props","cell","_cell","TaskTable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","Array","_key","call","concat","state","data","threshold","divColor","selectedName","ref","getColumns","baseColumns","title","field","width","push","formatter","reactFormatter","_createClass","key","_this2","ReactTabulator","columns","this","footerElement","rowFormatter","row","getData","LoadTime","getElement","style","backgroundColor","React","Component","TableComponent","selectedMeasure","setSelectedMeasure","selectedDimension","setSelectedDimension","selectedReport","setSelectedReport","selectedVisual","setSelectedVisual","_useState9","_useState10","selectedPage","setSelectedPage","_useState11","_useState12","filteredData","setFilteredData","_useState13","_useState14","filterdimensionCheckboxFlag","setFilterdimensionCheckboxFlag","_useState15","_useState16","anchorEl","setAnchorEl","_useState17","_useState18","filterthresholdCheckboxFlag","setFilterthresholdCheckboxFlag","_useState19","_useState20","filtervisualCheckboxFlag","setFiltervisualCheckboxFlag","measures","_toConsumableArray","Set","item","Measure","dimensions","DimensionName","reports","ReportName","visuals","VisualName","pages","PageName","open","Boolean","undefined","filterTableData","measure","dimension","report","visual","page","filtered","filter","maxWidth","event","index","Button","variant","currentTarget","IconButton","FilterListIcon","Popover","display","flexDirection","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","hasDimension","entry","overflowY","height","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","minWidth","color","Math","round","LinearWithValueLabel","totalprogress","progress","setProgress","timer","setInterval","prevProgress","clearInterval","App","loading","setLoading","setResponse","setFormdata","Fragment","body","JSON","stringify","headers","then","parse","catch","alert","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.976e431c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst InputScreen = ({ handleFormSubmit }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState('') \r\n\r\n  const [formData, setFormData] = useState({\r\n    filePath: '',\r\n    modelName: '',\r\n    xmlaEndpoint: '',\r\n    thresholdValue: '',\r\n    isFirstTime: false\r\n  })\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target\r\n    const fieldValue = type === 'checkbox' ? checked : value\r\n    setFormData({ ...formData, [name]: fieldValue })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    handleFormSubmit(formData)\r\n   \r\n  }\r\n\r\n  const handleChangeFile = e => {\r\n    setSelectedFiles(e.map(e => e.value).join(','))\r\n    setFormData({ ...formData, ['filePath']: e.map(e => e.value).join(',') })\r\n  }\r\n\r\n  console.log(selectedFiles)\r\n\r\n  const [Filepath, setFilepath] = useState({ filepath: [] })\r\n  const [options, setOptions] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchReports = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:3002/getreport')\r\n        const result = await response.json()\r\n        setFilepath(result)\r\n      } catch (error) {\r\n        console.error('Error fetching reports:', error)\r\n      }\r\n    }\r\n\r\n    fetchReports()\r\n  }, []) \r\n\r\n  useEffect(() => {\r\n    const options = Filepath.filepath.map(pathArray => {\r\n      const filePath = pathArray[0]\r\n      const fileNameWithoutExtension = filePath\r\n        .split('\\\\')\r\n        .pop()\r\n        .replace(/\\..+$/, '')\r\n\r\n      return {\r\n        value: filePath,\r\n        label: fileNameWithoutExtension\r\n      }\r\n    })\r\n\r\n    setOptions(options)\r\n  }, [Filepath]) \r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Metric Load Time Tool</h1>\r\n      <form\r\n        class=\"well form-horizontal mt-5\"\r\n        action=\"/submit\"\r\n        method=\"post\"\r\n        id=\"contact_form\"\r\n      >\r\n        <fieldset>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <label class=\"col-md-4 control-label\">File Paths</label>\r\n            <div class=\"col-md-8\">\r\n              <Select isMulti options={options} onChange={handleChangeFile} />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <label class=\"col-md-4 control-label\">Model Name</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                name=\"modelName\"\r\n                placeholder=\"Enter the Model Name\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                value={formData.modelName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <label class=\"col-md-4 control-label\">XMLA Endpoint</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                name=\"xmlaEndpoint\"\r\n                placeholder=\"Enter the XMLA Endpoint of Workspace\"\r\n                class=\"form-control\"\r\n                value={formData.xmlaEndpoint}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <label class=\"col-md-4 control-label\">Threshold Value</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                name=\"thresholdValue\"\r\n                placeholder=\"Enter Threshold Value\"\r\n                class=\"form-control\"\r\n                value={formData.thresholdValue}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <label class=\"col-md-4 control-label\">\r\n              Running for First Time?\r\n            </label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"running_first_time\"\r\n                name=\"isFirstTime\"\r\n                value={formData.isFirstTime}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group d-flex\">\r\n            <div class=\"col-md-8 col-md-offset-4\">\r\n              <button class=\"btn btn-success\" onClick={handleSubmit}>\r\n                Go!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputScreen\r\n","import React from 'react'\r\nimport { ReactTabulator, reactFormatter } from 'react-tabulator'\r\nimport 'react-tabulator/lib/styles.css' \r\nimport 'react-tabulator/css/bootstrap/tabulator_bootstrap.min.css' \r\n\r\n\r\nfunction RenderVariance(props) {\r\n\r\n  const cellValue = props.cell._cell.value\r\n\r\n  if(cellValue > 0){\r\n    return <p  className = \"text-danger\">▲</p>\r\n  }\r\n  else{\r\n    return <p className='text-success'>▼</p>\r\n\r\n  }\r\n}\r\n\r\nclass TaskTable extends React.Component {\r\n  state = {\r\n    data: this.props.data,\r\n    threshold: this.props.formData.thresholdValue,\r\n    isFirstTime: this.props.formData.isFirstTime,\r\n    divColor: 'initial-color',\r\n    selectedName: ''\r\n  }\r\n  ref = null\r\n\r\n  getColumns = () => {\r\n    const baseColumns = [\r\n      { title: 'Measure', field: 'Measure', width: 200 },\r\n      { title: 'Dimension Name', field: 'DimensionName', width: 200 },\r\n      { title: 'Column Name', field: 'ColumnName', width: 150 },\r\n      { title: 'LoadTime', field: 'LoadTime', width: 150 }\r\n    ]\r\n\r\n    if (!this.state.isFirstTime) {\r\n      baseColumns.push(\r\n        {\r\n          title: 'Previous Load Time',\r\n          field: 'PreviousLoadTime',\r\n          width: 200\r\n        },\r\n        {\r\n          title: 'Change in Load Time',\r\n          field: 'ChangeinLoadTime',\r\n          width: 200,\r\n          formatter: reactFormatter(<RenderVariance />)\r\n        }\r\n      )\r\n    }\r\n\r\n    baseColumns.push(\r\n      { title: 'Report Name', field: 'ReportName', width: 150 },\r\n      { title: 'Page Name', field: 'PageName', width: 175 },\r\n      { title: 'Visual Name', field: 'VisualName', width: 125 },\r\n      { title: 'Visual Title', field: 'VisualTitle', width: 150 }\r\n    )\r\n\r\n    return baseColumns\r\n  }\r\n\r\n\r\n  // setData = () => {\r\n  //   this.setState(this.props.data)\r\n  // }\r\n\r\n  // clearData = () => {\r\n  //   this.setState({ data: [] })\r\n  // }\r\n\r\n  render() {\r\n    const rowFormatter = row => {\r\n      const data = row.getData()\r\n\r\n      if (data.LoadTime === this.state.threshold) {\r\n        row.getElement().style.backgroundColor = '#cf787e'\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-5 mx-2 border\">\r\n        <ReactTabulator\r\n          columns={this.getColumns()} \r\n          data={this.props.data}\r\n          footerElement={<span>Footer</span>}\r\n          rowFormatter={rowFormatter}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, IconButton, Popover, Typography } from '@mui/material'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport TaskTable from './TaskTable'\r\n\r\nconst TableComponent = ({ response, formData }) => {\r\n\r\n  var data = response.result\r\n  const [selectedMeasure, setSelectedMeasure] = useState('')\r\n  const [selectedDimension, setSelectedDimension] = useState('')\r\n  const [selectedReport, setSelectedReport] = useState('')\r\n  const [selectedVisual, setSelectedVisual] = useState('')\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n  const [filteredData, setFilteredData] = useState(data)\r\n  const [filterdimensionCheckboxFlag, setFilterdimensionCheckboxFlag] =\r\n    useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const [\r\n    filterthresholdCheckboxFlag,\r\n    setFilterthresholdCheckboxFlag\r\n  ] = useState(false)\r\n\r\n\r\n  const [filtervisualCheckboxFlag, setFiltervisualCheckboxFlag] =\r\n    useState(false)\r\n\r\n  const measures = [...new Set(response.result.map(item => item.Measure))]\r\n  const dimensions = [\r\n    ...new Set(response.result.map(item => item.DimensionName))\r\n  ]\r\n  const reports = [...new Set(response.result.map(item => item.ReportName))]\r\n  const visuals = [...new Set(response.result.map(item => item.VisualName))]\r\n  const pages = [...new Set(response.result.map(item => item.PageName))]\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n\r\n\r\n  function filterTableData(\r\n    measure,\r\n    dimension,\r\n    report,\r\n    visual,\r\n    page,\r\n  ) {\r\n    const filtered = data.filter(item => {\r\n      return (\r\n        (measure === '' || item.Measure === measure) &&\r\n        (dimension === '' || item.DimensionName === dimension) &&\r\n        (report === '' || item.ReportName === report) &&\r\n        (visual === '' || item.VisualName === visual) &&\r\n        (page === '' || item.PageName === page)\r\n\r\n      )\r\n    })\r\n    setFilteredData(filtered)\r\n  }\r\n  const handlethresholdCheckboxChange = event => {\r\n    setFilterthresholdCheckboxFlag(event.target.checked)\r\n\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterthresholdCheckboxFlag ? item.LoadTime === (formData.thresholdValue) : true\r\n      })\r\n    )\r\n  }\r\n\r\n  const handledimensionCheckboxChange = event => {\r\n    setFilterdimensionCheckboxFlag(event.target.checked)\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filterdimensionCheckboxFlag ? item.hasDimension === '1' : true\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const handlevisualCheckboxChange = event => {\r\n    setFiltervisualCheckboxFlag(event.target.checked)\r\n    setFilteredData(\r\n      data.filter(item => {\r\n        return !filtervisualCheckboxFlag ? item.VisualName !== '-' : true\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n  function handleMeasureChange(event) {\r\n    setSelectedMeasure(event.target.value)\r\n    filterTableData(\r\n      event.target.value,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage\r\n    )\r\n  }\r\n\r\n  function handleDimensionChange(event) {\r\n    setSelectedDimension(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      event.target.value,\r\n      selectedReport,\r\n      selectedVisual,\r\n      selectedPage\r\n    )\r\n  }\r\n\r\n  function handleReportChange(event) {\r\n    setSelectedReport(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      event.target.value,\r\n      selectedVisual,\r\n      selectedPage\r\n    )\r\n  }\r\n\r\n  function handleVisualChange(event) {\r\n    setSelectedVisual(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      event.target.value,\r\n      selectedPage\r\n    )\r\n  }\r\n\r\n  function handlePageChange(event) {\r\n    setSelectedPage(event.target.value)\r\n    filterTableData(\r\n      selectedMeasure,\r\n      selectedDimension,\r\n      selectedReport,\r\n      selectedVisual,\r\n      event.target.value\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\" style={{ maxWidth: 'fit-content' }}>\r\n      <div className=\"Maindropdowncontainer d-flex justify-content-around\">\r\n        <div className=\"DropDownContainer mx-4\">\r\n          <div className=\"DropdownLabel mx-2\"> Measure</div>\r\n          <div className=\"Dropdown\">\r\n            <select\r\n              value={selectedMeasure}\r\n              onChange={handleMeasureChange}\r\n              className=\"mx-2\"\r\n            >\r\n              <option value=\"\"> All Measures</option>\r\n              {measures.map((measure, index) => (\r\n                <option key={index} value={measure}>\r\n                  {measure}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"DropDownContainer mx-4\">\r\n          <div className=\"DropdownLabel mx-2\">Dimension </div>\r\n          <div className=\"Dropdown\">\r\n            <select\r\n              value={selectedDimension}\r\n              onChange={handleDimensionChange}\r\n              className=\"mx-2\"\r\n            >\r\n              <option value=\"\"> All Dimensions</option>\r\n              {dimensions.map((dimension, index) => (\r\n                <option key={index} value={dimension}>\r\n                  {dimension}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"DropDownContainer mx-4\">\r\n          <div className=\"DropdownLabel mx-2\">Report </div>\r\n          <div className=\"Dropdown\">\r\n            <select\r\n              value={selectedReport}\r\n              onChange={handleReportChange}\r\n              className=\"mx-2\"\r\n            >\r\n              <option value=\"\">All Reports</option>\r\n              {reports.map((report, index) => (\r\n                <option key={index} value={report}>\r\n                  {report}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"DropDownContainer mx-4\">\r\n          <div className=\"DropdownLabel mx-2\">Page </div>\r\n          <div className=\"Dropdown\">\r\n            <select\r\n              value={selectedPage}\r\n              onChange={handlePageChange}\r\n              className=\"mx-2\"\r\n            >\r\n              <option value=\"\">All Pages</option>\r\n              {pages.map((page, index) => (\r\n                <option key={index} value={page}>\r\n                  {page}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"DropDownContainer mx-4\">\r\n          <div className=\"DropdownLabel mx-2\">Visual </div>\r\n          <div className=\"Dropdown\">\r\n            <select\r\n              value={selectedVisual}\r\n              onChange={handleVisualChange}\r\n              className=\"mx-2\"\r\n            >\r\n              <option value=\"\">All Visuals</option>\r\n              {visuals.map((visual, index) => (\r\n                <option key={index} value={visual}>\r\n                  {visual}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          aria-describedby={id}\r\n          variant=\"contained\"\r\n          onClick={handleClick}\r\n          className=\"mx-2 popoverBtn\"\r\n        >\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          style={{ display: 'flex', flexDirection: 'row' }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left'\r\n          }}\r\n        >\r\n          <Typography sx={{ p: 2 }} className='d-flex flex-column'>\r\n\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterthresholdCheckboxFlag}\r\n                onChange={handlethresholdCheckboxChange}\r\n                className='mx-2'\r\n              />\r\n              Above Threshold\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filterdimensionCheckboxFlag}\r\n                onChange={handledimensionCheckboxChange}\r\n                className='mx-2'\r\n              />\r\n              Measure With Dimensions\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filtervisualCheckboxFlag}\r\n                onChange={handlevisualCheckboxChange}\r\n                className='mx-2'\r\n              />\r\n              Measure With Visuals\r\n            </label>\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n      <div className=\"cards\">\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card total_measures  rounded-0 \">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n\r\n                <b>Total Measure Combination</b>\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">{response.result.length}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_below_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n\r\n                <b>Combinations below threshold</b>\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e < formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"carD px-5\">\r\n          <div className=\"card combinations_above_threshold  rounded-0\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-text\">\r\n\r\n                <b>Combinations above threshold</b>\r\n              </h4>\r\n              <h3 className=\"card-title mb-auto\">\r\n                {\r\n                  response.result\r\n                    .map(entry => entry.LoadTime)\r\n                    .filter(e => e === formData.thresholdValue).length\r\n                }\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table mt-3\" style={{ overflowY: 'auto', height: '67vh' }}>\r\n        <TaskTable data={filteredData} formData={formData} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableComponent\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel({totalprogress}) {\r\n  const [progress, setProgress] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 95 ? 95 : prevProgress + (0.001)));\r\n    }, totalprogress*100000000000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport InputScreen from \"./Components/InputScreen\";\r\nimport TableComponent from \"./Components/TableComponent\";\r\nimport LinearWithValueLabel from \"./Components/ProgressBar\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [progress, setProgress] = useState(0)\r\n  const [formData, setFormdata] = useState({});\r\n\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    setLoading(true);\r\n    setFormdata(formData);\r\n    fetch(\"http://127.0.0.1:3002/progress\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProgress(JSON.parse(data).result)\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        alert(error);\r\n      });\r\n\r\n\r\n    setTimeout(() => {\r\n      fetch(\"http://127.0.0.1:3002/data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(response)\r\n          setResponse(JSON.parse(data));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          alert(error);\r\n        });\r\n    }, 100000);\r\n  };\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <div>\r\n        {loading ? (\r\n          <div>\r\n            <LinearWithValueLabel totalprogress={progress} />\r\n          </div>\r\n        ) : response ? (\r\n          <TableComponent response={response} formData={formData} />\r\n        ) : (\r\n          <InputScreen handleFormSubmit={handleFormSubmit} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}